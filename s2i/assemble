#!/bin/bash

# Global S2I variable setup
source `dirname "$0"`/s2i-setup

# Maven arguments setting up the environment
maven_env_args="-Dmaven.repo.local=${S2I_ARTIFACTS_DIR}/m2"

function check_error() {
  local label=$1
  local error=$2
  if [ ${error} -ne 0 ]; then
    echo "Aborting due to error code $error for $label"
    exit ${error}
  fi
}

function setup_maven() {
  if [ -f "${S2I_SOURCE_DIR}/configuration/settings.xml" ]; then
    maven_env_args="${maven_env_args} -s ${S2I_SOURCE_DIR}/configuration/settings.xml"
    echo "Using custom maven settings from ${S2I_SOURCE_DIR}/configuration/settings.xml"
  fi
}

function fatjar_build() {
  local maven_args=${MAVEN_ARGS:-package}
  local artifact_prefix=${ARTIFACT_PREFIX:-${S2I_SOURCE_DIR}/target/}
  local artifact_suffix=${ARTIFACT_SUFFIX:--fat.jar}

  local old_dir=$(pwd)
  cd ${S2I_SOURCE_DIR}

  mvn ${maven_env_args} ${maven_args}
  check_error "Maven build" $?

  fatjar=${artifact_prefix}*${artifact_suffix}
  if [ -f $fatjar ]; then
    cp $fatjar ${DEPLOYMENTS_DIR}
    echo ${fatjar} > ${DEPLOYMENTS_DIR}/.fatjar
  else
    echo "Did not find ${artifact_prefix}*${artifact_suffix}. Make sure your build generates a fat jar with a '${artifact_suffix}' suffix"
    exit 1
  fi

  cd $old_dir
}

if [ -f "${S2I_SOURCE_DIR}/pom.xml" ]; then
  # maven fat-jar deployment
  fatjar_build
else
  # no-build deployment, just copy the files
  cp -r ${S2I_SOURCE_DIR}/* ${DEPLOYMENTS_DIR}
fi

